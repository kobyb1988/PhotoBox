<UserControl x:Class="ImageMaker.View.Controls.InstagramExplorerCtl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:viewModels="clr-namespace:ImageMaker.ViewModels.ViewModels;assembly=ImageMaker.ViewModels"
             xmlns:images="clr-namespace:ImageMaker.ViewModels.ViewModels.Images;assembly=ImageMaker.ViewModels"
             xmlns:converters1="clr-namespace:ImageMaker.CommonView.Converters;assembly=ImageMaker.CommonView"
             xmlns:spinningWheel="clr-namespace:Hammer.SpinningWheel;assembly=Hammer.SpinningWheel"
             xmlns:customControls="clr-namespace:ImageMaker.Themes.CustomControls;assembly=ImageMaker.Themes"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:themes="clr-namespace:ImageMaker.Themes;assembly=ImageMaker.Themes"
             xmlns:converters="clr-namespace:ImageMaker.View.Converters"
             xmlns:helpers="clr-namespace:ImageMaker.View.Helpers"
             xmlns:converters2="clr-namespace:ImageMaker.ViewModels.Converters;assembly=ImageMaker.ViewModels"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance viewModels:InstagramExplorerViewModel}"
             d:DesignHeight="600" d:DesignWidth="800">
    <UserControl.Resources>
        <converters1:ByteArrayToImageConverter x:Key="ByteArrayToImageConverter" />
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <CollectionViewSource Source="{Binding Path=Images}" IsLiveFilteringRequested="True" x:Key="Source">
            <!--<i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Filter">
                                        <command:EventToCommand Command="{Binding Mode=OneWay, Path=FilterCommand}" 
                                                                PassEventArgsToCommand="True" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>-->
            <CollectionViewSource.LiveFilteringProperties>
                <system:String>State</system:String>
            </CollectionViewSource.LiveFilteringProperties>
        </CollectionViewSource>
    </UserControl.Resources>
    <Border Padding="85,25" Background="{DynamicResource {x:Static themes:ThemeManager.OtherImagesKey}}">
        <Viewbox Stretch="Uniform">
            <Grid Width="900" Height="730">
                <Grid.RowDefinitions>
                    <RowDefinition Height="0.18*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="0.18*" />
                </Grid.RowDefinitions>
                <Border x:Name="SearchTollBar"
                        Background="{DynamicResource {x:Static themes:ThemeManager.OtherBackgroundColorKey}}"
                        CornerRadius="40"
                        Padding="5"
                        Margin="5">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.3*"/>
                            <ColumnDefinition Width="0.2*"/>
                            <ColumnDefinition Width="0.5*"/>
                        </Grid.ColumnDefinitions>
                        <Image Source="pack://application:,,,/ImageMaker.Themes;component/Resources/logo_1.png" Margin="20,0,0,0">
                            <Image.RenderTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1" />
                            </Image.RenderTransform>
                        </Image>
                        <StackPanel Orientation="Horizontal" Grid.Column="1" HorizontalAlignment="Right">
                            <StackPanel.RenderTransformOrigin>
                                <Point X="0.5" Y="0.5" />
                            </StackPanel.RenderTransformOrigin>
                            <StackPanel.RenderTransform>
                                <ScaleTransform ScaleX="0.8" ScaleY="0.8"></ScaleTransform>
                            </StackPanel.RenderTransform>
                            <Grid Margin="0,0,5,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="0.9*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <customControls:CustomRadioButton IsChecked="{Binding Path=IsUserName}"
                                        Style="{StaticResource CustomRadioButtonStyle}" 
                                        GroupName="searchCriteria"
                                        IsThreeState="False"
                                        Background="#c7f464"
                                        BorderBrush="#c7f464"  
                                        VerticalContentAlignment="Top">
                                    <customControls:CustomRadioButton.SelectedBorderBrush>
                                        <LinearGradientBrush>
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStop Color="#99cc64" Offset="0" />
                                                <GradientStop Color="#c7f464" Offset="1" />
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </customControls:CustomRadioButton.SelectedBorderBrush>
                                </customControls:CustomRadioButton>
                                <TextBlock IsHitTestVisible="False"
                                        Foreground="#ffffff"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        Text="a"
                                        FontSize="50"
                                        Margin="0,-15,0,0"/>
                                <TextBlock Text="аккаунт" Grid.Row="1" HorizontalAlignment="Center" FontSize="18"/>
                            </Grid>
                            <Grid Margin="5,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="0.9*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <customControls:CustomRadioButton Style="{StaticResource CustomRadioButtonStyle}"
                                        IsChecked="{Binding Path=IsHashTag}"
                                        GroupName="searchCriteria"
                                        IsThreeState="False"
                                        Background="#4ecdc4"
                                        BorderBrush="#4ecdc4" >
                                    <customControls:CustomRadioButton.SelectedBorderBrush>
                                        <LinearGradientBrush>
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStop Color="#50a9a8" Offset="0" />
                                                <GradientStop Color="#4ecdc4" Offset="1" />
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </customControls:CustomRadioButton.SelectedBorderBrush>
                                </customControls:CustomRadioButton>
                                <TextBlock IsHitTestVisible="False"
                                        Foreground="#ffffff"
                                        VerticalAlignment="Center" 
                                        HorizontalAlignment="Center"
                                        Text="#"
                                        FontSize="50"/>
                                <TextBlock Text="хэштег" Grid.Row="1" HorizontalAlignment="Center" FontSize="18"/>
                            </Grid>
                        </StackPanel>
                        <helpers:Proxy In="{Binding ElementName=SearchBoxCtl,Path=SearchText,UpdateSourceTrigger=PropertyChanged,NotifyOnSourceUpdated=True,NotifyOnTargetUpdated=True}"
                                Out="{Binding TextSearch,UpdateSourceTrigger=PropertyChanged,NotifyOnSourceUpdated=True,NotifyOnTargetUpdated=True}"/>
                        <customControls:SearchBoxCtl x:Name="SearchBoxCtl"
                                Grid.Column="2"
                                Margin="5,6,15,4"
                                SearchCommand="{Binding Path=SearchCommand}">
                            <customControls:SearchBoxCtl.Style>
                                <Style TargetType="{x:Type customControls:SearchBoxCtl}" BasedOn="{StaticResource SearchBoxStyle}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsHashTag}" Value="True">
                                            <Setter Property="Tag" Value="Введите хэштег" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsUserName}" Value="True">
                                            <Setter Property="Tag" Value="Введите аккаунт" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </customControls:SearchBoxCtl.Style>
                        </customControls:SearchBoxCtl>
                    </Grid>
                </Border>

                <Border  Grid.Row="1">
                    <Grid>
                        <Grid.Resources>
                            <DataTemplate x:Key="tmpl" DataType="{x:Type images:InstagramImageViewModel}">
                                <ToggleButton ClickMode="Release" 
                                        Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBox}, Path=DataContext.CheckCommand}"
                                        CommandParameter="{Binding Path=.}"
                                        IsChecked="{Binding Path=IsChecked}">
                                    <ToggleButton.Style>
                                        <Style TargetType="{x:Type ToggleButton}">
                                            <Setter Property="ToolTip" Value="{Binding Path=Name}" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <Border x:Name="RootBorder"
                                                                Margin="10"
                                                                Background="Transparent"
                                                                BorderBrush="Transparent"
                                                                BorderThickness="2" 
                                                                Width="157.4"
                                                                Height="157.4">
                                                            <Grid x:Name="rootGrid" >
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="7*"/>
                                                                    <RowDefinition Height="3*"/>
                                                                </Grid.RowDefinitions>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="7*"/>
                                                                    <ColumnDefinition Width="3*"/>
                                                                </Grid.ColumnDefinitions>
                                                                <Image Source="{Binding Path=Data, Converter={StaticResource ByteArrayToImageConverter}}"
                                                                        Stretch="Fill"
                                                                        Grid.ColumnSpan="2" 
                                                                        Grid.RowSpan="2">
                                                                </Image>
                                                                <Rectangle Fill="#4ecdc4" Grid.RowSpan="2" Grid.ColumnSpan="2" Opacity="0" x:Name="overlay"/>
                                                                <ToggleButton Grid.Row="1" 
                                                                        IsHitTestVisible="False"
                                                                        Grid.Column="1"
                                                                        x:Name="toggle"
                                                                        Margin="7" 
                                                                        IsChecked="{TemplateBinding IsChecked}">
                                                                    <ToggleButton.Style>
                                                                        <Style TargetType="{x:Type ToggleButton}">
                                                                            <Setter Property="Background" Value="White" />
                                                                            <Setter Property="Padding" Value="5" />
                                                                            <Setter Property="IsThreeState" Value="False" />
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                        <Border>
                                                                                            <Grid>
                                                                                                <Ellipse Stretch="Fill" Fill="#ffffff" />
                                                                                                <Ellipse Stretch="Fill" Fill="#4ecdc4">
                                                                                                    <Ellipse.RenderTransform>
                                                                                                        <ScaleTransform ScaleX="0.85" ScaleY="0.85" />
                                                                                                    </Ellipse.RenderTransform>
                                                                                                    <Ellipse.RenderTransformOrigin>
                                                                                                        <Point X="0.5" Y="0.5"></Point>
                                                                                                    </Ellipse.RenderTransformOrigin>
                                                                                                </Ellipse>
                                                                                                <Border Background="Transparent"
                                                                                                        BorderBrush="Transparent"
                                                                                                        VerticalAlignment="Center"
                                                                                                        HorizontalAlignment="Center">
                                                                                                    <Path Data="M 0,0 L 11,-2 L 8,5" x:Name="Tick" Stroke="Transparent" StrokeThickness="1">
                                                                                                        <Path.RenderTransform>
                                                                                                            <RotateTransform Angle="135" CenterX="5.5" CenterY="1"/>
                                                                                                        </Path.RenderTransform>
                                                                                                    </Path>
                                                                                                </Border>
                                                                                            </Grid>

                                                                                        </Border>
                                                                                        <ControlTemplate.Triggers>
                                                                                            <Trigger Property="IsChecked" Value="True">
                                                                                                <Setter TargetName="Tick" Property="Stroke" Value="#ffffff" />
                                                                                            </Trigger>
                                                                                        </ControlTemplate.Triggers>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                    </ToggleButton.Style>
                                                                </ToggleButton>
                                                            </Grid>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                                <Setter TargetName="overlay" Property="Opacity" Value="0.2" />
                                                                <Setter TargetName="RootBorder" Property="BorderBrush" Value="#4ecdc4" />
                                                            </Trigger>
                                                            <Trigger Property="IsChecked" Value="True">
                                                                <Setter TargetName="overlay" Property="Opacity" Value="0.2" />
                                                                <Setter TargetName="RootBorder" Property="BorderBrush" Value="#4ecdc4" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>

                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>


                            </DataTemplate>

                        </Grid.Resources>

                        <ListBox Background="Transparent"
                                ItemTemplate="{StaticResource tmpl}"
                                ItemsSource="{Binding Source={StaticResource Source}}"
                                BorderBrush="Transparent"
                                BorderThickness="0"
                                ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                SelectionMode="Multiple">
                            <ListBox.Resources>
                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#00000000"/>
                                <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="#00000000"/>
                            </ListBox.Resources>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Orientation="Horizontal" IsItemsHost="True" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemContainerStyle>
                                <Style TargetType="{x:Type ListBoxItem}">
                                    <Setter Property="IsSelected" Value="{Binding Path=IsChecked, Mode=TwoWay}" />
                                </Style>
                            </ItemsControl.ItemContainerStyle>
                        </ListBox>
                        <spinningWheel:SpinningWheel HorizontalAlignment="Center"
                                IsSpinning="{Binding Path=SearchAsyncOperation.IsNotCompleted,TargetNullValue=false}" 
                                Visibility="{Binding Path=SearchAsyncOperation.IsNotCompleted, Converter={converters1:BoolToVisibleConverter},TargetNullValue={x:Static Visibility.Hidden}}"/>
                        <customControls:ErrorHandlingControl Command="{Binding SearchCommand}" CommandParameter="{Binding ElementName=SearchBoxCtl,Path=SearchText}"
                                          Style="{StaticResource ErrorHandlingControlStyle}"
                                          Visibility="{Binding SearchAsyncOperation.IsFaulted,
                                                               FallbackValue={x:Static Visibility.Collapsed},
                                                               TargetNullValue={x:Static Visibility.Collapsed},
                                                               Converter={converters1:BoolToVisibleConverter}}" />
                    </Grid>
                    
                </Border>
                <Border  Padding="0" Grid.Row="2">
                    <Grid  Width="890" Height="85">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.25*"/>
                            <ColumnDefinition Width="0.5*"/>
                            <ColumnDefinition Width="0.25*"/>
                        </Grid.ColumnDefinitions>
                        
                        <customControls:BlueButton Command="{Binding Path=GoBackCommand}"
                                Background="{DynamicResource {x:Static themes:ThemeManager.OtherButtonColorKey}}"
                                Foreground="{DynamicResource {x:Static themes:ThemeManager.OtherForegroundButtonColorKey}}"
                                AdvBackground="{DynamicResource {x:Static themes:ThemeManager.OtherBackgroundCircleButtonColorKey}}"
                                CornerRadius="40"
                                InnerCornerRadius="60"
                                Padding="8"
                                Grid.Column="0"
                                FontSize="18"
                                HorizontalAlignment="Stretch"
                                Content="Назад" 
                                ShowBackButton="True" 
                                CornerAlign="BottomLeft,TopLeft"/>
                        <customControls:DataPagerCtl Grid.Column="1"
                                ExtendedNextCommand="{Binding SearchCommand}" 
                                ExtendedNextCommandParams="{Binding TextSearch,
                                UpdateSourceTrigger=PropertyChanged,NotifyOnSourceUpdated=True,NotifyOnTargetUpdated=True}"
                                ItemsView="{Binding Source={StaticResource Source}}" 
                                PageSize="15"
                                PagesInRow="3"
                                Foreground="{DynamicResource {x:Static themes:ThemeManager.OtherForegroundButtonColorKey}}"
                                Background="{DynamicResource {x:Static themes:ThemeManager.OtherButtonColorKey}}"/>

                        <customControls:BlueButton Command="{Binding Path=PrintCommand}"
                                Foreground="{DynamicResource {x:Static themes:ThemeManager.OtherForegroundButtonColorKey}}"
                                Background="{DynamicResource {x:Static themes:ThemeManager.OtherButtonColorKey}}"
                                AdvBackground="{DynamicResource {x:Static themes:ThemeManager.OtherBackgroundCircleButtonColorKey}}"
                                CornerRadius="40"
                                InnerCornerRadius="60"
                                Padding="8"
                                FontSize="18"
                                ShowBackButton="True"
                                IsLeftOriented="False"
                                HorizontalAlignment="Stretch"
                                Grid.Column="2"
                                CornerAlign="TopRight,BottomRight"
                                Content="Печать"/>
                    </Grid>
                </Border>
            </Grid>
        </Viewbox>
    </Border>
</UserControl>
